openapi: 3.0.1
info:
  title: detiler
  description: api for managing tiles' details
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
tags:
  - name: detail
    description: detail selected tile
  - name: kit
    description: existing kits
security: []
paths:
  /kits:
    get:
      operationId: getKits
      tags:
        - kit
      summary: Get a list of available kits
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/kitMetadata'
        4XX:
          $ref: '#/components/responses/BadRequest'
        5XX:
          $ref: '#/components/responses/UnexpectedError'
    post:
      summary: Register a new kit
      requestBody:
        description: kit to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kit'
      operationId: createKit
      tags:
        - kit
      responses:
        '201':
          description: created
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        5XX:
          $ref: '#/components/responses/UnexpectedError'
  /cooldown:
    get:
      operationId: getCooldowns
      tags:
        - cooldown
      summary: Get a list of cooldowns according to query
      parameters:
        - in: query
          name: kits
          description: return cooldowns in specified kits
          schema:
            type: array
            items:
              $ref: '#/components/schemas/kitName'
            minItems: 0
            default: []
            uniqueItems: true
        - in: query
          name: minZoom
          description: min zoom level
          schema:
            $ref: '#/components/schemas/z'
        - in: query
          name: maxZoom
          description: max zoom level
          schema:
            $ref: '#/components/schemas/z'
        - in: query
          name: area
          description: cooldowns consisting the area
          schema:
            type: array
            items:
              anyOf:
                - $ref: '#/components/schemas/longitude'
                - $ref: '#/components/schemas/latitude'
            minItems: 4
            maxItems: 4
        - in: query
          name: enabled
          description: cooldowns which are enabled or disabled
          schema:
            type: boolean
        - in: query
          name: size
          description: pagination query size limitation
          schema:
            $ref: '#/components/schemas/size'
        - in: query
          name: from
          description: pagination query from
          schema:
            $ref: '#/components/schemas/from'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/cooldownResponse'
        4XX:
          $ref: '#/components/responses/BadRequest'
        5XX:
          $ref: '#/components/responses/UnexpectedError'
    post:
      summary: Register a new cooldown
      requestBody:
        description: cooldown to be created
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/baseCooldown'
                - $ref: '#/components/schemas/cooldownWithBboxRequest'
                - $ref: '#/components/schemas/cooldownWithGeometryRequest'
      operationId: createCooldown
      tags:
        - cooldown
      responses:
        '201':
          description: created
        '400':
          $ref: '#/components/responses/BadRequest'
        5XX:
          $ref: '#/components/responses/UnexpectedError'
  /detail:
    get:
      operationId: getTileDetails
      tags:
        - detail
      summary: return tiles' details by query
      parameters:
        - in: query
          name: kits
          description: return tile details in specified kits
          schema:
            type: array
            items:
              $ref: '#/components/schemas/kitName'
            minItems: 1
            default: []
            uniqueItems: true
        - in: query
          name: minZoom
          description: min zoom level
          schema:
            $ref: '#/components/schemas/z'
          required: true
        - in: query
          name: maxZoom
          description: max zoom level
          schema:
            $ref: '#/components/schemas/z'
          required: true
        - in: query
          name: bbox
          description: tiles within bounding box
          schema:
            type: array
            items:
              anyOf:
                - $ref: '#/components/schemas/longitude'
                - $ref: '#/components/schemas/latitude'
            minItems: 4
            maxItems: 4
          required: true
        - in: query
          name: shouldMatchCurrentState
          description: should the state match the current tile's state
          schema:
            type: boolean
        - in: query
          name: minState
          description: min tile's state
          schema:
            $ref: '#/components/schemas/state'
        - in: query
          name: maxState
          description: max tile's state
          schema:
            $ref: '#/components/schemas/state'
        - in: query
          name: cursor
          description: pagination cursor
          schema:
            $ref: '#/components/schemas/cursor'
        - in: query
          name: size
          description: pagination query size limitation
          schema:
            $ref: '#/components/schemas/size'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTileDetailsResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        5XX:
          $ref: '#/components/responses/UnexpectedError'
  /detail/{z}/{x}/{y}:
    get:
      operationId: getTileDetailsByKits
      tags:
        - detail
      summary: return tiles' details in selected kits
      parameters:
        - in: path
          name: z
          description: zoom level
          schema:
            $ref: '#/components/schemas/z'
          required: true
        - in: path
          name: x
          description: x value
          schema:
            $ref: '#/components/schemas/x'
          required: true
        - in: path
          name: y
          description: y value
          schema:
            $ref: '#/components/schemas/y'
          required: true
        - in: query
          name: kits
          description: return tile details in specified kits
          schema:
            type: array
            items:
              $ref: '#/components/schemas/kitName'
            uniqueItems: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tileDetails'
        400:
          $ref: '#/components/responses/BadRequest'
        5XX:
          $ref: '#/components/responses/UnexpectedError'
  /detail/{kit}/{z}/{x}/{y}:
    get:
      operationId: getTileDetailsByKit
      tags:
        - detail
      summary: return tile details in a single kit
      parameters:
        - in: path
          name: kit
          description: kit name
          schema:
            $ref: '#/components/schemas/kitName'
          required: true
        - in: path
          name: z
          description: zoom level
          schema:
            $ref: '#/components/schemas/z'
          required: true
        - in: path
          name: x
          description: x value
          schema:
            $ref: '#/components/schemas/x'
          required: true
        - in: path
          name: y
          description: y value
          schema:
            $ref: '#/components/schemas/y'
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tileDetails'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/UnexpectedError'
    put:
      operationId: putTileDetails
      tags:
        - detail
      summary: upsert a given tile details
      parameters:
        - in: path
          name: kit
          description: kit name
          schema:
            $ref: '#/components/schemas/kitName'
          required: true
        - in: path
          name: z
          description: zoom level
          schema:
            $ref: '#/components/schemas/z'
          required: true
        - in: path
          name: x
          description: x value
          schema:
            $ref: '#/components/schemas/x'
          required: true
        - in: path
          name: y
          description: y value
          schema:
            $ref: '#/components/schemas/y'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updatableTileDetails'
      responses:
        201:
          description: Created
        204:
          description: Updated
        404:
          $ref: '#/components/responses/NotFound'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    UnexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
  schemas:
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Geometry:
      type: object
      description: Geojson geometry
      discriminator:
        propertyName: type
      required:
        - type
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometry-objects
      properties:
        type:
          type: string
          enum:
            - Point
            - LineString
            - Polygon
            - MultiPoint
            - MultiLineString
            - MultiPolygon
          description: the geometry type
    Point3D:
      type: array
      description: Point in 3D space
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      minItems: 2
      maxItems: 3
      items:
        type: number
    Point:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              $ref: '#/components/schemas/Point3D'
    LineString:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id3
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              type: array
              items:
                $ref: '#/components/schemas/Point3D'
    Polygon:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id4
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Point3D'
    MultiPoint:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id5
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              type: array
              items:
                $ref: '#/components/schemas/Point3D'
    MultiLineString:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Point3D'
    MultiPolygon:
      type: object
      description: Geojson geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Point3D'
    longitude:
      type: number
      minimum: -180
      maximum: 180
      exclusiveMinimum: true
    latitude:
      type: number
      minimum: -85.05112877980659
      maximum: 85.05112877980659
    size:
      type: number
      minimum: 0
      maximum: 1000
      default: 100
    from:
      type: number
      minimum: 0
      default: 0
    cursor:
      type: number
    z:
      type: integer
      minimum: 0
    x:
      type: integer
      minimum: 0
    y:
      type: integer
      minimum: 0
    kitName:
      type: string
      minLength: 1
    state:
      type: integer
      minimum: -1
    unixTimestamp:
      type: integer
      minimum: 0
    counter:
      type: integer
      minimum: 0
    coordinates:
      type: string
      pattern: '^(\d+(\.\d+)?),(\d+(\.\d+)?)$'
      example: '34.114,35.123'
    updatableTileDetails:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/unixTimestamp'
        state:
          $ref: '#/components/schemas/state'
        status:
          type: string
          enum: [rendered, skipped, cooled]
      required:
        - timestamp
      additionalProperties: false
    kit:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/kitName'
      required:
        - name
    kitMetadata:
      type: object
      additionalProperties: true
      allOf:
        - $ref: '#/components/schemas/kit'
    baseCooldown:
      type: object
      required:
        - duration
        - kits
        - minZoom
        - maxZoom
        - enabled
      properties:
        duration:
          type: integer
          minimum: 1
          example: 3600
        kits:
          type: array
          items:
            $ref: '#/components/schemas/kitName'
        minZoom:
          $ref: '#/components/schemas/z'
        maxZoom:
          $ref: '#/components/schemas/z'
        enabled:
          type: boolean
          default: true
        ttl:
          type: integer
          minimum: 1
          example: 666
        description:
          type: string
    cooldownWithBboxRequest:
      allOf:
        - $ref: '#/components/schemas/baseCooldown'
        - type: object
          required:
            - area
          properties:
            area:
              type: array
              description: WGS84 bbox
              items:
                type: number
              minItems: 4
              maxItems: 4
              example:
                - -85
                - -85
                - 85
                - 85
    cooldownWithGeometryRequest:
      allOf:
        - $ref: '#/components/schemas/baseCooldown'
        - type: object
          required:
            - area
          properties:
            area:
              $ref: '#/components/schemas/Geometry'
    cooldownResponse:
      allOf:
        - $ref: '#/components/schemas/baseCooldown'
        - type: object
          required:
            - duration
            - kits
            - minZoom
            - maxZoom
            - createdAt
            - updatedAt
          properties:
            geoshape:
              type: string
            createdAt:
              $ref: '#/components/schemas/unixTimestamp'
            updatedAt:
              $ref: '#/components/schemas/unixTimestamp'
    getTileDetailsResponse:
      type: object
      additionalProperties: false
      required:
        - tiles
      properties:
        tiles:
          type: array
          items:
            $ref: '#/components/schemas/tileDetails'
        cursor:
          $ref: '#/components/schemas/cursor'
    tileDetails:
      type: object
      properties:
        z:
          $ref: '#/components/schemas/z'
        x:
          $ref: '#/components/schemas/x'
        y:
          $ref: '#/components/schemas/y'
        kit:
          $ref: '#/components/schemas/kitName'
        state:
          $ref: '#/components/schemas/state'
        states:
          items:
            $ref: '#/components/schemas/state'
        createdAt:
          $ref: '#/components/schemas/unixTimestamp'
        updatedAt:
          $ref: '#/components/schemas/unixTimestamp'
        renderedAt:
          $ref: '#/components/schemas/unixTimestamp'
        updateCount:
          $ref: '#/components/schemas/counter'
        renderCount:
          $ref: '#/components/schemas/counter'
        skipCount:
          $ref: '#/components/schemas/counter'
        coolCount:
          $ref: '#/components/schemas/counter'
        coordinates:
          $ref: '#/components/schemas/coordinates'
      required:
        - z
        - x
        - y
        - kit
        - state
        - states
        - createdAt
        - updatedAt
        - renderedAt
        - updateCount
        - renderCount
        - skipCount
        - coolCount
        - coordinates
